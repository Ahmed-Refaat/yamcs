// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from rest.proto

package org.yamcs.protobuf;


public final class SchemaRest
{

    public static final class ListParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListParametersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListParametersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.ParameterInfo parameter : message.getParameterList())
                    output.writeObject(1, parameter, org.yamcs.protobuf.SchemaMdb.ParameterInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListParametersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addParameter(input.mergeObject(org.yamcs.protobuf.Mdb.ParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "parameter";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameter", 1);
        }
    }

    public static final class BulkGetParameterRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId id : message.getIdList())
                    output.writeObject(1, id, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
        }
    }

    public static final class BulkGetParameterResponse
    {

        public static final class GetParameterResponse
        {
            public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MessageSchema();
            public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message) throws java.io.IOException
                {
                    if(message.hasId())
                        output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                    if(message.hasParameter())
                        output.writeObject(2, message.getParameter(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.WRITE, false);

                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message) throws java.io.IOException {}
                public org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                                break;
                            case 2:
                                builder.setParameter(input.mergeObject(org.yamcs.protobuf.Mdb.ParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.MERGE));

                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder newMessage()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "id";
                    case 2: return "parameter";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("id", 1);
                fieldMap.put("parameter", 2);
            }
        }

        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse response : message.getResponseList())
                    output.writeObject(1, response, org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addResponse(input.mergeObject(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.newBuilder(), org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "response";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("response", 1);
        }
    }

    public static final class BulkGetParameterValueRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId id : message.getIdList())
                    output.writeObject(1, id, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterValueRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class ListCommandsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListCommandsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListCommandsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListCommandsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListCommandsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.CommandInfo command : message.getCommandList())
                    output.writeObject(1, command, org.yamcs.protobuf.SchemaMdb.CommandInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListCommandsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommand(input.mergeObject(org.yamcs.protobuf.Mdb.CommandInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.CommandInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListCommandsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "command";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("command", 1);
        }
    }

}
