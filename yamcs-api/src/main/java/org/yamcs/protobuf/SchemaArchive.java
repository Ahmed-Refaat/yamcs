// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from archive.proto

package org.yamcs.protobuf;


public final class SchemaArchive
{

    public static final class DumpArchiveRequest
    {
        public static final org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.DumpArchiveRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.DumpArchiveRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasParameterRequest())
                    output.writeObject(3, message.getParameterRequest(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.WRITE, false);

                if(message.hasPacketRequest())
                    output.writeObject(4, message.getPacketRequest(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.WRITE, false);

                if(message.hasEventRequest())
                    output.writeObject(5, message.getEventRequest(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.WRITE, false);

                if(message.hasCommandHistoryRequest())
                    output.writeObject(6, message.getCommandHistoryRequest(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.WRITE, false);

                if(message.hasPpRequest())
                    output.writeObject(7, message.getPpRequest(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.WRITE, false);

                if(message.hasStream())
                    output.writeBool(8, message.getStream(), false);
                if(message.hasUtcStart())
                    output.writeString(9, message.getUtcStart(), false);
                if(message.hasUtcStop())
                    output.writeString(10, message.getUtcStop(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.DumpArchiveRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.DumpArchiveRequest> typeClass()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.DumpArchiveRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.DumpArchiveRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setParameterRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.ParameterReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.MERGE));

                            break;
                        case 4:
                            builder.setPacketRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PacketReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.MERGE));

                            break;
                        case 5:
                            builder.setEventRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.EventReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.MERGE));

                            break;
                        case 6:
                            builder.setCommandHistoryRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.CommandHistoryReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.MERGE));

                            break;
                        case 7:
                            builder.setPpRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PpReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.MERGE));

                            break;
                        case 8:
                            builder.setStream(input.readBool());
                            break;
                        case 9:
                            builder.setUtcStart(input.readString());
                            break;
                        case 10:
                            builder.setUtcStop(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.DumpArchiveRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "parameterRequest";
                case 4: return "packetRequest";
                case 5: return "eventRequest";
                case 6: return "commandHistoryRequest";
                case 7: return "ppRequest";
                case 8: return "stream";
                case 9: return "utcStart";
                case 10: return "utcStop";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("parameterRequest", 3);
            fieldMap.put("packetRequest", 4);
            fieldMap.put("eventRequest", 5);
            fieldMap.put("commandHistoryRequest", 6);
            fieldMap.put("ppRequest", 7);
            fieldMap.put("stream", 8);
            fieldMap.put("utcStart", 9);
            fieldMap.put("utcStop", 10);
        }
    }

    public static final class DumpArchiveResponse
    {
        public static final org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.DumpArchiveResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.DumpArchiveResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.ParameterData parameterData : message.getParameterDataList())
                    output.writeObject(2, parameterData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.TmPacketData packetData : message.getPacketDataList())
                    output.writeObject(3, packetData, org.yamcs.protobuf.SchemaYamcs.TmPacketData.WRITE, true);

                for(org.yamcs.protobuf.Commanding.CommandHistoryEntry command : message.getCommandList())
                    output.writeObject(4, command, org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.Event event : message.getEventList())
                    output.writeObject(5, event, org.yamcs.protobuf.SchemaYamcs.Event.WRITE, true);

                for(org.yamcs.protobuf.Pvalue.ParameterData ppData : message.getPpDataList())
                    output.writeObject(6, ppData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.DumpArchiveResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.DumpArchiveResponse> typeClass()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.DumpArchiveResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.DumpArchiveResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.addParameterData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        case 3:
                            builder.addPacketData(input.mergeObject(org.yamcs.protobuf.Yamcs.TmPacketData.newBuilder(), org.yamcs.protobuf.SchemaYamcs.TmPacketData.MERGE));

                            break;
                        case 4:
                            builder.addCommand(input.mergeObject(org.yamcs.protobuf.Commanding.CommandHistoryEntry.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.MERGE));

                            break;
                        case 5:
                            builder.addEvent(input.mergeObject(org.yamcs.protobuf.Yamcs.Event.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Event.MERGE));

                            break;
                        case 6:
                            builder.addPpData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.DumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.DumpArchiveResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.DumpArchiveResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "parameterData";
                case 3: return "packetData";
                case 4: return "command";
                case 5: return "event";
                case 6: return "ppData";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameterData", 2);
            fieldMap.put("packetData", 3);
            fieldMap.put("command", 4);
            fieldMap.put("event", 5);
            fieldMap.put("ppData", 6);
        }
    }

    public static final class GetTagsRequest
    {
        public static final org.yamcs.protobuf.SchemaArchive.GetTagsRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.GetTagsRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.GetTagsRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.GetTagsRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.GetTagsRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.GetTagsRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasUtcStart())
                    output.writeString(3, message.getUtcStart(), false);
                if(message.hasUtcStop())
                    output.writeString(4, message.getUtcStop(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.GetTagsRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.GetTagsRequest> typeClass()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.GetTagsRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.GetTagsRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.GetTagsRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.GetTagsRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setUtcStart(input.readString());
                            break;
                        case 4:
                            builder.setUtcStop(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.GetTagsRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.GetTagsRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.GetTagsRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.GetTagsRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.GetTagsRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "utcStart";
                case 4: return "utcStop";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("utcStart", 3);
            fieldMap.put("utcStop", 4);
        }
    }

    public static final class GetTagsResponse
    {
        public static final org.yamcs.protobuf.SchemaArchive.GetTagsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.GetTagsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.GetTagsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.GetTagsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.GetTagsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.GetTagsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.ArchiveTag tags : message.getTagsList())
                    output.writeObject(1, tags, org.yamcs.protobuf.SchemaYamcs.ArchiveTag.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.GetTagsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.GetTagsResponse> typeClass()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.GetTagsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.GetTagsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.GetTagsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.GetTagsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addTags(input.mergeObject(org.yamcs.protobuf.Yamcs.ArchiveTag.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.GetTagsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.GetTagsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.GetTagsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.GetTagsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.GetTagsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.GetTagsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "tags";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("tags", 1);
        }
    }

    public static final class InsertTagRequest
    {
        public static final org.yamcs.protobuf.SchemaArchive.InsertTagRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.InsertTagRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.InsertTagRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.InsertTagRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.InsertTagRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.InsertTagRequest message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasStart())
                    output.writeInt64(2, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(3, message.getStop(), false);
                if(message.hasDescription())
                    output.writeString(4, message.getDescription(), false);
                if(message.hasColor())
                    output.writeString(5, message.getColor(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.InsertTagRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.InsertTagRequest> typeClass()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.InsertTagRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.InsertTagRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.InsertTagRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.InsertTagRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setStart(input.readInt64());
                            break;
                        case 3:
                            builder.setStop(input.readInt64());
                            break;
                        case 4:
                            builder.setDescription(input.readString());
                            break;
                        case 5:
                            builder.setColor(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.InsertTagRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.InsertTagRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.InsertTagRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.InsertTagRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.InsertTagRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "start";
                case 3: return "stop";
                case 4: return "description";
                case 5: return "color";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("start", 2);
            fieldMap.put("stop", 3);
            fieldMap.put("description", 4);
            fieldMap.put("color", 5);
        }
    }

    public static final class InsertTagResponse
    {
        public static final org.yamcs.protobuf.SchemaArchive.InsertTagResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.InsertTagResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.InsertTagResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.InsertTagResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.InsertTagResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.InsertTagResponse message) throws java.io.IOException
            {
                if(message.hasTag())
                    output.writeObject(1, message.getTag(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.InsertTagResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.InsertTagResponse> typeClass()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.InsertTagResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.InsertTagResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.InsertTagResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.InsertTagResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setTag(input.mergeObject(org.yamcs.protobuf.Yamcs.ArchiveTag.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.InsertTagResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.InsertTagResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.InsertTagResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.InsertTagResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.InsertTagResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.InsertTagResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "tag";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("tag", 1);
        }
    }

    public static final class UpdateTagRequest
    {
        public static final org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.UpdateTagRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.UpdateTagRequest message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasStart())
                    output.writeInt64(2, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(3, message.getStop(), false);
                if(message.hasDescription())
                    output.writeString(4, message.getDescription(), false);
                if(message.hasColor())
                    output.writeString(5, message.getColor(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.UpdateTagRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.UpdateTagRequest> typeClass()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.UpdateTagRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Archive.UpdateTagRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Archive.UpdateTagRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Archive.UpdateTagRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setStart(input.readInt64());
                            break;
                        case 3:
                            builder.setStop(input.readInt64());
                            break;
                        case 4:
                            builder.setDescription(input.readString());
                            break;
                        case 5:
                            builder.setColor(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Archive.UpdateTagRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Archive.UpdateTagRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaArchive.UpdateTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Archive.UpdateTagRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Archive.UpdateTagRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Archive.UpdateTagRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "start";
                case 3: return "stop";
                case 4: return "description";
                case 5: return "color";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("start", 2);
            fieldMap.put("stop", 3);
            fieldMap.put("description", 4);
            fieldMap.put("color", 5);
        }
    }

}
