// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from parameters.proto

package org.yamcs.protobuf;


public final class SchemaParameters
{

    public static final class ListAvailableParametersRequest
    {
        public static final org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ListAvailableParametersRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ListAvailableParametersRequest message) throws java.io.IOException
            {
                for(String namespaces : message.getNamespacesList())
                    output.writeString(1, namespaces, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ListAvailableParametersRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ListAvailableParametersRequest> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ListAvailableParametersRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.ListAvailableParametersRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addNamespaces(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ListAvailableParametersRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "namespaces";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("namespaces", 1);
        }
    }

    public static final class ListAvailableParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ListAvailableParametersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ListAvailableParametersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Parameters.ParameterSummary parameters : message.getParametersList())
                    output.writeObject(1, parameters, org.yamcs.protobuf.SchemaParameters.ParameterSummary.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ListAvailableParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ListAvailableParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ListAvailableParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.ListAvailableParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addParameters(input.mergeObject(org.yamcs.protobuf.Parameters.ParameterSummary.newBuilder(), org.yamcs.protobuf.SchemaParameters.ParameterSummary.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ListAvailableParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "parameters";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameters", 1);
        }
    }

    public static final class ParameterSummary
    {
        public static final org.yamcs.protobuf.SchemaParameters.ParameterSummary.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.ParameterSummary.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.ParameterSummary.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.ParameterSummary.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterSummary>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterSummary message) throws java.io.IOException
            {
                if(message.hasId())
                    output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                if(message.hasDataSource())
                    output.writeEnum(2, message.getDataSource().getNumber(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterSummary message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterSummary.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterSummary.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterSummary> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterSummary message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.ParameterSummary newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterSummary.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterSummary.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setDataSource(org.yamcs.protobuf.Parameters.DataSource.valueOf(input.readEnum()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterSummary.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.ParameterSummary.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterSummary.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterSummary.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterSummary.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterSummary.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterSummary.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "dataSource";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("dataSource", 2);
        }
    }

    public static final class GetParameterRequest
    {
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId list : message.getListList())
                    output.writeObject(1, list, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterRequest> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.GetParameterRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addList(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.GetParameterRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "list";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("list", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class GetParameterInfoRequest
    {
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterInfoRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterInfoRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId list : message.getListList())
                    output.writeObject(1, list, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterInfoRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterInfoRequest> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterInfoRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.GetParameterInfoRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addList(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterInfoRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "list";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("list", 1);
        }
    }

    public static final class UnitInfo
    {
        public static final org.yamcs.protobuf.SchemaParameters.UnitInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.UnitInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.UnitInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.UnitInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.UnitInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.UnitInfo message) throws java.io.IOException
            {
                if(message.hasUnit())
                    output.writeString(1, message.getUnit(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.UnitInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.UnitInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.UnitInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.UnitInfo> typeClass()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.UnitInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.UnitInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.UnitInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.UnitInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setUnit(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.UnitInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.UnitInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.UnitInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.UnitInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.UnitInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.UnitInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.UnitInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "unit";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("unit", 1);
        }
    }

    public static final class AlarmRange
    {
        public static final org.yamcs.protobuf.SchemaParameters.AlarmRange.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.AlarmRange.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.AlarmRange.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.AlarmRange.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.AlarmRange>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.AlarmRange message) throws java.io.IOException
            {
                if(message.hasLevel())
                    output.writeEnum(1, message.getLevel().getNumber(), false);
                if(message.hasMinInclusive())
                    output.writeDouble(2, message.getMinInclusive(), false);
                if(message.hasMaxInclusive())
                    output.writeDouble(3, message.getMaxInclusive(), false);
                if(message.hasEnumerationValue())
                    output.writeString(4, message.getEnumerationValue(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.AlarmRange message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmRange.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmRange.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.AlarmRange> typeClass()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.AlarmRange message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.AlarmRange newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.AlarmRange.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.AlarmRange.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setLevel(org.yamcs.protobuf.Parameters.AlarmLevel.valueOf(input.readEnum()));
                            break;
                        case 2:
                            builder.setMinInclusive(input.readDouble());
                            break;
                        case 3:
                            builder.setMaxInclusive(input.readDouble());
                            break;
                        case 4:
                            builder.setEnumerationValue(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.AlarmRange.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.AlarmRange.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmRange.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmRange.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.AlarmRange.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.AlarmRange.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.AlarmRange.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "level";
                case 2: return "minInclusive";
                case 3: return "maxInclusive";
                case 4: return "enumerationValue";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("level", 1);
            fieldMap.put("minInclusive", 2);
            fieldMap.put("maxInclusive", 3);
            fieldMap.put("enumerationValue", 4);
        }
    }

    public static final class AlarmInfo
    {
        public static final org.yamcs.protobuf.SchemaParameters.AlarmInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.AlarmInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.AlarmInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.AlarmInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.AlarmInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.AlarmInfo message) throws java.io.IOException
            {
                if(message.hasMinViolations())
                    output.writeInt32(1, message.getMinViolations(), false);
                for(org.yamcs.protobuf.Parameters.AlarmRange staticAlarmRanges : message.getStaticAlarmRangesList())
                    output.writeObject(2, staticAlarmRanges, org.yamcs.protobuf.SchemaParameters.AlarmRange.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.AlarmInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.AlarmInfo> typeClass()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.AlarmInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.AlarmInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.AlarmInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.AlarmInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setMinViolations(input.readInt32());
                            break;
                        case 2:
                            builder.addStaticAlarmRanges(input.mergeObject(org.yamcs.protobuf.Parameters.AlarmRange.newBuilder(), org.yamcs.protobuf.SchemaParameters.AlarmRange.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.AlarmInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.AlarmInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.AlarmInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.AlarmInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.AlarmInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.AlarmInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "minViolations";
                case 2: return "staticAlarmRanges";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("minViolations", 1);
            fieldMap.put("staticAlarmRanges", 2);
        }
    }

    public static final class ParameterTypeInfo
    {
        public static final org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterTypeInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterTypeInfo message) throws java.io.IOException
            {
                if(message.hasEngType())
                    output.writeString(1, message.getEngType(), false);
                if(message.hasDataEncoding())
                    output.writeString(2, message.getDataEncoding(), false);
                for(org.yamcs.protobuf.Parameters.UnitInfo unitSet : message.getUnitSetList())
                    output.writeObject(3, unitSet, org.yamcs.protobuf.SchemaParameters.UnitInfo.WRITE, true);

                if(message.hasDefaultAlarm())
                    output.writeObject(4, message.getDefaultAlarm(), org.yamcs.protobuf.SchemaParameters.AlarmInfo.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterTypeInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterTypeInfo> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterTypeInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.ParameterTypeInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setEngType(input.readString());
                            break;
                        case 2:
                            builder.setDataEncoding(input.readString());
                            break;
                        case 3:
                            builder.addUnitSet(input.mergeObject(org.yamcs.protobuf.Parameters.UnitInfo.newBuilder(), org.yamcs.protobuf.SchemaParameters.UnitInfo.MERGE));

                            break;
                        case 4:
                            builder.setDefaultAlarm(input.mergeObject(org.yamcs.protobuf.Parameters.AlarmInfo.newBuilder(), org.yamcs.protobuf.SchemaParameters.AlarmInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterTypeInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterTypeInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "engType";
                case 2: return "dataEncoding";
                case 3: return "unitSet";
                case 4: return "defaultAlarm";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("engType", 1);
            fieldMap.put("dataEncoding", 2);
            fieldMap.put("unitSet", 3);
            fieldMap.put("defaultAlarm", 4);
        }
    }

    public static final class NameDescriptionType
    {
        public static final org.yamcs.protobuf.SchemaParameters.NameDescriptionType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.NameDescriptionType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.NameDescriptionType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.NameDescriptionType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.NameDescriptionType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.NameDescriptionType message) throws java.io.IOException
            {
                if(message.hasQualifiedName())
                    output.writeString(1, message.getQualifiedName(), false);
                if(message.hasShortDescription())
                    output.writeString(2, message.getShortDescription(), false);
                if(message.hasLongDescription())
                    output.writeString(3, message.getLongDescription(), false);
                for(org.yamcs.protobuf.Yamcs.NamedObjectId aliases : message.getAliasesList())
                    output.writeObject(4, aliases, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.NameDescriptionType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.NameDescriptionType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.NameDescriptionType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.NameDescriptionType> typeClass()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.NameDescriptionType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.NameDescriptionType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.NameDescriptionType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.NameDescriptionType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setQualifiedName(input.readString());
                            break;
                        case 2:
                            builder.setShortDescription(input.readString());
                            break;
                        case 3:
                            builder.setLongDescription(input.readString());
                            break;
                        case 4:
                            builder.addAliases(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.NameDescriptionType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.NameDescriptionType.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.NameDescriptionType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.NameDescriptionType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.NameDescriptionType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.NameDescriptionType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.NameDescriptionType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "qualifiedName";
                case 2: return "shortDescription";
                case 3: return "longDescription";
                case 4: return "aliases";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("qualifiedName", 1);
            fieldMap.put("shortDescription", 2);
            fieldMap.put("longDescription", 3);
            fieldMap.put("aliases", 4);
        }
    }

    public static final class ParameterInfo
    {
        public static final org.yamcs.protobuf.SchemaParameters.ParameterInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.ParameterInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.ParameterInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.ParameterInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterInfo message) throws java.io.IOException
            {
                if(message.hasId())
                    output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                if(message.hasDescription())
                    output.writeObject(2, message.getDescription(), org.yamcs.protobuf.SchemaParameters.NameDescriptionType.WRITE, false);

                if(message.hasType())
                    output.writeObject(3, message.getType(), org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.WRITE, false);

                if(message.hasDataSource())
                    output.writeString(4, message.getDataSource(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterInfo> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.ParameterInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.ParameterInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.ParameterInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setDescription(input.mergeObject(org.yamcs.protobuf.Parameters.NameDescriptionType.newBuilder(), org.yamcs.protobuf.SchemaParameters.NameDescriptionType.MERGE));

                            break;
                        case 3:
                            builder.setType(input.mergeObject(org.yamcs.protobuf.Parameters.ParameterTypeInfo.newBuilder(), org.yamcs.protobuf.SchemaParameters.ParameterTypeInfo.MERGE));

                            break;
                        case 4:
                            builder.setDataSource(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.ParameterInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.ParameterInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.ParameterInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.ParameterInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.ParameterInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.ParameterInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "description";
                case 3: return "type";
                case 4: return "dataSource";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("description", 2);
            fieldMap.put("type", 3);
            fieldMap.put("dataSource", 4);
        }
    }

    public static final class GetParameterInfoResponse
    {
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterInfoResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterInfoResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Parameters.ParameterInfo pinfo : message.getPinfoList())
                    output.writeObject(1, pinfo, org.yamcs.protobuf.SchemaParameters.ParameterInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterInfoResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterInfoResponse> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterInfoResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Parameters.GetParameterInfoResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addPinfo(input.mergeObject(org.yamcs.protobuf.Parameters.ParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaParameters.ParameterInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaParameters.GetParameterInfoResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Parameters.GetParameterInfoResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Parameters.GetParameterInfoResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "pinfo";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("pinfo", 1);
        }
    }

}
