// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from pvalue.proto

package org.yamcs.protobuf;


public final class SchemaPvalue
{

    public static final class ParameterValue
    {
        public static final org.yamcs.protobuf.SchemaPvalue.ParameterValue.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaPvalue.ParameterValue.MessageSchema();
        public static final org.yamcs.protobuf.SchemaPvalue.ParameterValue.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaPvalue.ParameterValue.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.ParameterValue>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.ParameterValue message) throws java.io.IOException
            {
                if(message.hasId())
                    output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                if(message.hasRawValue())
                    output.writeObject(2, message.getRawValue(), org.yamcs.protobuf.SchemaYamcs.Value.WRITE, false);

                if(message.hasEngValue())
                    output.writeObject(3, message.getEngValue(), org.yamcs.protobuf.SchemaYamcs.Value.WRITE, false);

                if(message.hasAcquisitionTime())
                    output.writeInt64(4, message.getAcquisitionTime(), false);
                if(message.hasGenerationTime())
                    output.writeInt64(5, message.getGenerationTime(), false);
                if(message.hasAcquisitionStatus())
                    output.writeString(6, message.getAcquisitionStatus().name(), false);
                if(message.hasProcessingStatus())
                    output.writeBool(7, message.getProcessingStatus(), false);
                if(message.hasMonitoringResult())
                    output.writeString(8, message.getMonitoringResult().name(), false);
                if(message.hasAcquisitionTimeUTC())
                    output.writeString(11, message.getAcquisitionTimeUTC(), false);
                if(message.hasGenerationTimeUTC())
                    output.writeString(12, message.getGenerationTimeUTC(), false);
                if(message.hasExpirationTime())
                    output.writeInt64(23, message.getExpirationTime(), false);
                if(message.hasExpirationTimeUTC())
                    output.writeString(24, message.getExpirationTimeUTC(), false);
                for(org.yamcs.protobuf.Mdb.AlarmRange alarmRange : message.getAlarmRangeList())
                    output.writeObject(25, alarmRange, org.yamcs.protobuf.SchemaMdb.AlarmRange.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.ParameterValue message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterValue.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterValue.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.ParameterValue> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.ParameterValue message) throws java.io.IOException {}
            public org.yamcs.protobuf.Pvalue.ParameterValue newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.ParameterValue.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.ParameterValue.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setRawValue(input.mergeObject(org.yamcs.protobuf.Yamcs.Value.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Value.MERGE));

                            break;
                        case 3:
                            builder.setEngValue(input.mergeObject(org.yamcs.protobuf.Yamcs.Value.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Value.MERGE));

                            break;
                        case 4:
                            builder.setAcquisitionTime(input.readInt64());
                            break;
                        case 5:
                            builder.setGenerationTime(input.readInt64());
                            break;
                        case 6:
                            builder.setAcquisitionStatus(org.yamcs.protobuf.Pvalue.AcquisitionStatus.valueOf(input.readString()));
                            break;
                        case 7:
                            builder.setProcessingStatus(input.readBool());
                            break;
                        case 8:
                            builder.setMonitoringResult(org.yamcs.protobuf.Pvalue.MonitoringResult.valueOf(input.readString()));
                            break;
                        case 11:
                            builder.setAcquisitionTimeUTC(input.readString());
                            break;
                        case 12:
                            builder.setGenerationTimeUTC(input.readString());
                            break;
                        case 23:
                            builder.setExpirationTime(input.readInt64());
                            break;
                        case 24:
                            builder.setExpirationTimeUTC(input.readString());
                            break;
                        case 25:
                            builder.addAlarmRange(input.mergeObject(org.yamcs.protobuf.Mdb.AlarmRange.newBuilder(), org.yamcs.protobuf.SchemaMdb.AlarmRange.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.ParameterValue.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Pvalue.ParameterValue.Builder newMessage()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterValue.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterValue.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.ParameterValue.Builder> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterValue.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.ParameterValue.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "rawValue";
                case 3: return "engValue";
                case 4: return "acquisitionTime";
                case 5: return "generationTime";
                case 6: return "acquisitionStatus";
                case 7: return "processingStatus";
                case 8: return "monitoringResult";
                case 11: return "acquisitionTimeUTC";
                case 12: return "generationTimeUTC";
                case 23: return "expirationTime";
                case 24: return "expirationTimeUTC";
                case 25: return "alarmRange";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("rawValue", 2);
            fieldMap.put("engValue", 3);
            fieldMap.put("acquisitionTime", 4);
            fieldMap.put("generationTime", 5);
            fieldMap.put("acquisitionStatus", 6);
            fieldMap.put("processingStatus", 7);
            fieldMap.put("monitoringResult", 8);
            fieldMap.put("acquisitionTimeUTC", 11);
            fieldMap.put("generationTimeUTC", 12);
            fieldMap.put("expirationTime", 23);
            fieldMap.put("expirationTimeUTC", 24);
            fieldMap.put("alarmRange", 25);
        }
    }

    public static final class ParameterData
    {
        public static final org.yamcs.protobuf.SchemaPvalue.ParameterData.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaPvalue.ParameterData.MessageSchema();
        public static final org.yamcs.protobuf.SchemaPvalue.ParameterData.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaPvalue.ParameterData.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.ParameterData>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.ParameterData message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.ParameterValue parameter : message.getParameterList())
                    output.writeObject(1, parameter, org.yamcs.protobuf.SchemaPvalue.ParameterValue.WRITE, true);

                if(message.hasGroup())
                    output.writeString(2, message.getGroup(), false);
                if(message.hasGenerationTime())
                    output.writeInt64(3, message.getGenerationTime(), false);
                if(message.hasSeqNum())
                    output.writeInt32(4, message.getSeqNum(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.ParameterData message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterData.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterData.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.ParameterData> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.ParameterData message) throws java.io.IOException {}
            public org.yamcs.protobuf.Pvalue.ParameterData newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.ParameterData.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.ParameterData.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addParameter(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterValue.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterValue.MERGE));

                            break;
                        case 2:
                            builder.setGroup(input.readString());
                            break;
                        case 3:
                            builder.setGenerationTime(input.readInt64());
                            break;
                        case 4:
                            builder.setSeqNum(input.readInt32());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.ParameterData.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Pvalue.ParameterData.Builder newMessage()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterData.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.ParameterData.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.ParameterData.Builder> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.ParameterData.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.ParameterData.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "parameter";
                case 2: return "group";
                case 3: return "generationTime";
                case 4: return "seqNum";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameter", 1);
            fieldMap.put("group", 2);
            fieldMap.put("generationTime", 3);
            fieldMap.put("seqNum", 4);
        }
    }

    public static final class SampleSeries
    {

        public static final class Sample
        {
            public static final org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.MessageSchema();
            public static final org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.SampleSeries.Sample>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.SampleSeries.Sample message) throws java.io.IOException
                {
                    if(message.hasAverageGenerationTime())
                        output.writeInt64(1, message.getAverageGenerationTime(), false);
                    if(message.hasAverageGenerationTimeUTC())
                        output.writeString(2, message.getAverageGenerationTimeUTC(), false);
                    if(message.hasAverageValue())
                        output.writeDouble(3, message.getAverageValue(), false);
                    if(message.hasLowValue())
                        output.writeDouble(4, message.getLowValue(), false);
                    if(message.hasHighValue())
                        output.writeDouble(5, message.getHighValue(), false);
                    if(message.hasN())
                        output.writeInt32(6, message.getN(), false);
                }
                public boolean isInitialized(org.yamcs.protobuf.Pvalue.SampleSeries.Sample message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Pvalue.SampleSeries.Sample> typeClass()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.SampleSeries.Sample message) throws java.io.IOException {}
                public org.yamcs.protobuf.Pvalue.SampleSeries.Sample newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setAverageGenerationTime(input.readInt64());
                                break;
                            case 2:
                                builder.setAverageGenerationTimeUTC(input.readString());
                                break;
                            case 3:
                                builder.setAverageValue(input.readDouble());
                                break;
                            case 4:
                                builder.setLowValue(input.readDouble());
                                break;
                            case 5:
                                builder.setHighValue(input.readDouble());
                                break;
                            case 6:
                                builder.setN(input.readInt32());
                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder newMessage()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Pvalue.SampleSeries.Sample.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.SampleSeries.Sample.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "averageGenerationTime";
                    case 2: return "averageGenerationTimeUTC";
                    case 3: return "averageValue";
                    case 4: return "lowValue";
                    case 5: return "highValue";
                    case 6: return "n";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("averageGenerationTime", 1);
                fieldMap.put("averageGenerationTimeUTC", 2);
                fieldMap.put("averageValue", 3);
                fieldMap.put("lowValue", 4);
                fieldMap.put("highValue", 5);
                fieldMap.put("n", 6);
            }
        }

        public static final org.yamcs.protobuf.SchemaPvalue.SampleSeries.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaPvalue.SampleSeries.MessageSchema();
        public static final org.yamcs.protobuf.SchemaPvalue.SampleSeries.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaPvalue.SampleSeries.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.SampleSeries>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.SampleSeries message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.SampleSeries.Sample sample : message.getSampleList())
                    output.writeObject(1, sample, org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.SampleSeries message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.SampleSeries.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.SampleSeries.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.SampleSeries> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.SampleSeries message) throws java.io.IOException {}
            public org.yamcs.protobuf.Pvalue.SampleSeries newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Pvalue.SampleSeries.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Pvalue.SampleSeries.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addSample(input.mergeObject(org.yamcs.protobuf.Pvalue.SampleSeries.Sample.newBuilder(), org.yamcs.protobuf.SchemaPvalue.SampleSeries.Sample.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Pvalue.SampleSeries.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Pvalue.SampleSeries.Builder newMessage()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaPvalue.SampleSeries.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaPvalue.SampleSeries.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Pvalue.SampleSeries.Builder> typeClass()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Pvalue.SampleSeries.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Pvalue.SampleSeries.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "sample";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("sample", 1);
        }
    }

}
