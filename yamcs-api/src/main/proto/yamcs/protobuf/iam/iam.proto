syntax = "proto2";

package yamcs.protobuf.iam;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "IamProto";
option java_multiple_files = true;

import "yamcs/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service IAM {

  rpc ListPrivileges(google.protobuf.Empty) returns (ListPrivilegesResponse) {
    option (yamcs.api.route) = {
      description: "List privileges"
      method: "GET"
      path: "/api/privileges"
    };
  }

  rpc ListUsers(google.protobuf.Empty) returns (ListUsersResponse) {
    option (yamcs.api.route) = {
      description: "List users"
      method: "GET"
      path: "/api/users"
    };
  }

  rpc GetUser(google.protobuf.Empty) returns (UserInfo) {
    option (yamcs.api.route) = {
      description: "Get a user"
      method: "GET"
      path: "/api/users/{username}"
    };
  }
  
  rpc CreateUser(CreateUserRequest) returns (UserInfo) {
    option (yamcs.api.route) = {
      description: "Create a user"
      method: "POST"
      path: "/api/users"
    };
  }
  
  rpc UpdateUser(UpdateUserRequest) returns (UserInfo) {
    option (yamcs.api.route) = {
      description: "Update a user"
      method: "PATCH"
      path: "/api/users/{username}"
    };
  }
  
  rpc GetOwnUser(google.protobuf.Empty) returns (UserInfo) {
    option (yamcs.api.route) = {
      description: "Get own user"
      method: "GET"
      path: "/api/user"
    };
  }
  
  rpc DeleteIdentity(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      description: "Delete an external identity"
      method: "DELETE"
      path: "/api/users/{username}/identities/{provider}"
    };
  }
  
  rpc ListGroups(google.protobuf.Empty) returns (ListGroupsResponse) {
    option (yamcs.api.route) = {
      description: "List groups"
      method: "GET"
      path: "/api/groups"
    };
  }
  
  rpc GetGroup(google.protobuf.Empty) returns (GroupInfo) {
    option (yamcs.api.route) = {
      description: "Get a group"
      method: "GET"
      path: "/api/groups/{name}"
    };
  }
  
  rpc CreateGroup(CreateGroupRequest) returns (GroupInfo) {
    option (yamcs.api.route) = {
      description: "Create a group"
      method: "POST"
      path: "/api/groups"
    };
  }
  
  rpc UpdateGroup(UpdateGroupRequest) returns (GroupInfo) {
    option (yamcs.api.route) = {
      description: "Update a group"
      method: "PATCH"
      path: "/api/groups/{name}"
    };
  }
  
  rpc DeleteGroup(google.protobuf.Empty) returns (GroupInfo) {
    option (yamcs.api.route) = {
      description: "Delete a group"
      method: "DELETE"
      path: "/api/groups/{name}"
    };
  }

  rpc ListServiceAccounts(google.protobuf.Empty) returns (ListServiceAccountsResponse) {
    option (yamcs.api.route) = {
      description: "List service accounts"
      method: "GET"
      path: "/api/service-accounts"
    };
  }
  
  rpc GetServiceAccount(google.protobuf.Empty) returns (ServiceAccountInfo) {
    option (yamcs.api.route) = {
      description: "Get a service account"
      method: "GET"
      path: "/api/service-accounts/{name}"
    };
  }
  
  rpc DeleteServiceAccount(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      description: "Delete a service account"
      method: "DELETE"
      path: "/api/service-accounts/{name}"
    };
  }
  
  rpc CreateServiceAccount(CreateServiceAccountRequest) returns (CreateServiceAccountResponse) {
    option (yamcs.api.route) = {
      description: "Create a service account"
      method: "POST"
      path: "/api/service-accounts"
    };
  }
}

message ListUsersResponse {
  repeated UserInfo users = 1;
}

message ListGroupsResponse {
  repeated GroupInfo groups = 1;
}

message CreateGroupRequest {
  optional string name = 1;
  optional string description = 2;
  repeated string users = 3;
  repeated string serviceAccounts = 4;
}

message UpdateGroupRequest {
  message MemberInfo {
    repeated string users = 1;
    repeated string serviceAccounts = 2;
  }
  optional string name = 1;
  optional string description = 2;
  optional MemberInfo memberInfo = 3;
}

message ListServiceAccountsResponse {
  repeated ServiceAccountInfo serviceAccounts = 1;
}

message CreateServiceAccountRequest {
  optional string name = 1;
}

message CreateServiceAccountResponse {
  optional string name = 1;
  optional string applicationId = 2;
  optional string applicationSecret = 3;
}

message CreateUserRequest {
  optional string name = 1;
  optional string displayName = 2;
  optional string email = 3;
  optional string password = 4;
}

message UpdateUserRequest {
  optional string displayName = 1;
  optional string email = 2;
  optional bool active = 3;
  optional bool superuser = 4;
  optional string password = 5;
}

message UserInfo {
  optional string login = 1 [deprecated=true];
  optional string name = 17;
  optional string displayName = 18;
  optional string email = 19;
  optional bool active = 16;
  optional bool superuser = 13;
  optional UserInfo createdBy = 20;
  optional google.protobuf.Timestamp creationTime = 14;
  optional google.protobuf.Timestamp confirmationTime = 21;
  optional google.protobuf.Timestamp lastLoginTime = 15;
  repeated string systemPrivilege = 11;
  repeated ObjectPrivilegeInfo objectPrivilege = 12;
  repeated GroupInfo groups = 22;
  repeated ExternalIdentityInfo identities = 23;
}

message ExternalIdentityInfo {
  optional string identity = 1;
  optional string provider = 2;
}

message GroupInfo {
  optional string name = 1;
  optional string description = 2;
  repeated UserInfo users = 3;
  repeated ServiceAccountInfo serviceAccounts = 4;
}

message ServiceAccountInfo {
  optional string name = 1;
  optional string displayName = 2;
  optional bool active = 3;
  optional UserInfo createdBy = 4;
  optional google.protobuf.Timestamp creationTime = 5;
  optional google.protobuf.Timestamp confirmationTime = 6;
  optional google.protobuf.Timestamp lastLoginTime = 7;
}

message ObjectPrivilegeInfo {
  optional string type = 1;
  repeated string object = 2;
}

message ListPrivilegesResponse {
  repeated string systemPrivileges = 1; 
}
