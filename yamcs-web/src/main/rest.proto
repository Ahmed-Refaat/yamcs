package org.yamcs.protobuf;

import "yamcs.proto";

// Generic holder for an applicative exception
// (extend for cases where more structured info is needed)
message RestExceptionMessage {
  optional string type=1;
  optional string msg=2;
}

message RestArgumentType {
  optional string name=1;
  optional string value=2;
}

message RestCommandType {
  optional NamedObjectId name=1;
  repeated RestArgumentType arguments=2;
}

message RestListAvailableParametersRequest {
  repeated string namespaces=1; // if not available, all the namespaces
}

message RestListAvailableParametersResponse {
  optional RestExceptionMessage exception=1;
  repeated NamedObjectId ids=2;
}

message RestValidateCommandRequest {
  repeated RestCommandType commands=1;
}

message RestValidateCommandResponse {
  optional RestExceptionMessage exception=1;
}

message RestDumpRawMdbRequest {
}

message RestDumpRawMdbResponse {
  optional RestExceptionMessage exception=1;
  optional bytes rawMdb=2;
}

message RestReplayResponse {
  optional RestExceptionMessage exception=1;
}

service RESTService {
  rpc listAvailableParameters(RestListAvailableParametersRequest) returns (RestListAvailableParametersResponse);
  rpc validateCommand(RestValidateCommandRequest) returns (RestValidateCommandResponse);
  rpc dumpRawMdb(RestDumpRawMdbRequest) returns (RestDumpRawMdbResponse);

  // Just a shortcut right now, reusing this Message. Might reconsider to improve prettyness of the exposed json API
  rpc replay(ReplayRequest) returns (RestReplayResponse);
}
