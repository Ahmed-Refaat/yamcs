// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from rest.proto

package org.yamcs.protobuf;


public final class SchemaRest
{

    public static final class ExceptionMessage
    {
        public static final org.yamcs.protobuf.SchemaRest.ExceptionMessage.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ExceptionMessage.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ExceptionMessage.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ExceptionMessage.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ExceptionMessage>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ExceptionMessage message) throws java.io.IOException
            {
                if(message.hasType())
                    output.writeString(1, message.getType(), false);
                if(message.hasMsg())
                    output.writeString(2, message.getMsg(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ExceptionMessage message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ExceptionMessage> typeClass()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ExceptionMessage message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ExceptionMessage newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ExceptionMessage.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ExceptionMessage.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setType(input.readString());
                            break;
                        case 2:
                            builder.setMsg(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ExceptionMessage.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ExceptionMessage.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ExceptionMessage.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ExceptionMessage.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ExceptionMessage.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "type";
                case 2: return "msg";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("type", 1);
            fieldMap.put("msg", 2);
        }
    }

    public static final class ListAvailableParametersRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ListAvailableParametersRequest>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ListAvailableParametersRequest message) throws java.io.IOException
            {
                for(String namespaces : message.getNamespacesList())
                    output.writeString(1, namespaces, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAvailableParametersRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAvailableParametersRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ListAvailableParametersRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListAvailableParametersRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addNamespaces(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersRequest.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ListAvailableParametersRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "namespaces";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("namespaces", 1);
        }
    }

    public static final class ListAvailableParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ListAvailableParametersResponse>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ListAvailableParametersResponse message) throws java.io.IOException
            {
                if(message.hasException())
                    output.writeObject(1, message.getException(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.WRITE, false);

                for(org.yamcs.protobuf.Yamcs.NamedObjectId ids : message.getIdsList())
                    output.writeObject(2, ids, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAvailableParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAvailableParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ListAvailableParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListAvailableParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setException(input.mergeObject(org.yamcs.protobuf.Rest.ExceptionMessage.newBuilder(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.MERGE));

                            break;
                        case 2:
                            builder.addIds(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAvailableParametersResponse.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ListAvailableParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "exception";
                case 2: return "ids";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("exception", 1);
            fieldMap.put("ids", 2);
        }
    }

    public static final class RequestArchiveRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.RequestArchiveRequest>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.RequestArchiveRequest message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RequestArchiveRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RequestArchiveRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.RequestArchiveRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RequestArchiveRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveRequest.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.RequestArchiveRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

    public static final class RequestArchiveResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.RequestArchiveResponse>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.RequestArchiveResponse message) throws java.io.IOException
            {
                if(message.hasException())
                    output.writeObject(1, message.getException(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RequestArchiveResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RequestArchiveResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.RequestArchiveResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RequestArchiveResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setException(input.mergeObject(org.yamcs.protobuf.Rest.ExceptionMessage.newBuilder(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RequestArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RequestArchiveResponse.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.RequestArchiveResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "exception";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("exception", 1);
        }
    }

    public static final class ValidateCommandRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ValidateCommandRequest>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ValidateCommandRequest message) throws java.io.IOException
            {
                if(message.hasCommandString())
                    output.writeString(1, message.getCommandString(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ValidateCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ValidateCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ValidateCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ValidateCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setCommandString(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandRequest.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ValidateCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commandString";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commandString", 1);
        }
    }

    public static final class ValidateCommandResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ValidateCommandResponse>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ValidateCommandResponse message) throws java.io.IOException
            {
                if(message.hasException())
                    output.writeObject(1, message.getException(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ValidateCommandResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ValidateCommandResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ValidateCommandResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ValidateCommandResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setException(input.mergeObject(org.yamcs.protobuf.Rest.ExceptionMessage.newBuilder(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ValidateCommandResponse.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.ValidateCommandResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "exception";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("exception", 1);
        }
    }

    public static final class DumpRawMdbRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.DumpRawMdbRequest>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.DumpRawMdbRequest message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.DumpRawMdbRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.DumpRawMdbRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.DumpRawMdbRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.DumpRawMdbRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbRequest.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.DumpRawMdbRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

    public static final class DumpRawMdbResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.DumpRawMdbResponse>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.DumpRawMdbResponse message) throws java.io.IOException
            {
                if(message.hasException())
                    output.writeObject(1, message.getException(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.WRITE, false);

                if(message.hasRawMdb())
                    output.writeByteArray(2, message.getRawMdb().toByteArray(), false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.DumpRawMdbResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.DumpRawMdbResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.DumpRawMdbResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.DumpRawMdbResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setException(input.mergeObject(org.yamcs.protobuf.Rest.ExceptionMessage.newBuilder(), org.yamcs.protobuf.SchemaRest.ExceptionMessage.MERGE));

                            break;
                        case 2:
                            builder.setRawMdb(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.DumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.DumpRawMdbResponse.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.yamcs.protobuf.Rest.DumpRawMdbResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "exception";
                case 2: return "rawMdb";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("exception", 1);
            fieldMap.put("rawMdb", 2);
        }
    }

}
